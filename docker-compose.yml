version: '3'

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  # Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # PostgreSQL for Airflow metadata
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - airflow-kafka

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.8.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
      DOCKER_HOST: unix:///var/run/docker.sock
    networks:
      - airflow-kafka
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./kafka:/opt/airflow/kafka
      - ./requirements.txt:/requirements.txt
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    entrypoint: bash -c "pip install -r /requirements.txt && airflow db init && airflow webserver"

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.8.0
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    networks:
      - airflow-kafka
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./kafka:/opt/airflow/kafka
      - ./requirements.txt:/requirements.txt
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - airflow-webserver
      - postgres
    entrypoint: bash -c "pip install -r /requirements.txt && airflow scheduler"

  spark:
    build:
      context: .
      dockerfile: ./spark/Dockerfile  # Assurez-vous que le Dockerfile est Ã  cet emplacement
    networks:
      - airflow-kafka
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - ./spark/spark_streaming.py:/opt/bitnami/spark/spark_streaming.py
    depends_on:
      - kafka
      - postgres
    command: ["./bin/spark-submit", "--master", "local[*]", "--packages", "org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0,org.postgresql:postgresql:42.5.1", "/opt/bitnami/spark/spark_streaming.py"]


networks:
  airflow-kafka:
    driver: bridge